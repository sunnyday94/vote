package com.chunmi.vote.dao;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.chunmi.vote.po.VoteProduction;
import com.chunmi.vote.utils.PageRequest;
import com.chunmi.vote.vo.VoteEchartsVo;

@Mapper
public interface VoteProductionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    int insert(VoteProduction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    int insertSelective(VoteProduction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    VoteProduction selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    int updateByPrimaryKeySelective(VoteProduction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cm_vote_production
     *
     * @mbg.generated Thu Nov 09 16:15:05 CST 2017
     */
    int updateByPrimaryKey(VoteProduction record);

    @Select("select count(1) from cm_vote_production where del_flag = '0'")
	Integer selectVoteProductionCounts();

    
    /**
     * 分页查询作品列表
     * @param pageRequest
     * @return
     */
	List<VoteProduction> selectProductionListByPage(@Param("pageRequest")PageRequest pageRequest);

	
	/**
	 * 根据活动id和分组id查询作品数量
	 * @param production
	 * @return
	 */
	@Select("select * from cm_vote_production where del_flag = '0' and active_id = #{activeId} and group_id = #{groupId} for update")
	List<VoteProduction> selectProdutionByActiveIdAndGroupId(VoteProduction production);

	
	/**
	 * 根据活动id查询作品列表
	 * @param activeId
	 * @return
	 */
	List<VoteProduction> selectProductionListByActiveId(@Param("activeId")Long activeId);

	
	/**
	 * 根据活动id获取投票统计图信息
	 * @param activeId
	 * @return
	 */
	List<VoteEchartsVo> getVoteEchartsInfo(@Param("activeId")Long activeId);

	/**
	 * 根据作品id删除作品
	 * @param productionId
	 * @return
	 */
	@Update("update cm_vote_production set del_flag = '1',del_time=NOW() where id=#{productionId}")
	Integer delProductionById(@Param("productionId") Long productionId);
}